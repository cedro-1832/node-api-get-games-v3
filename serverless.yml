service: get-games-api-v3  # <--- Añadir esta línea para definir el servicio

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: us-east-1
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    DYNAMODB_TABLE: PlayStationGames_v3
    JWT_SECRET: ${ssm:/serverless-api/JWT_SECRET, 'supersecreto'}
    NODE_ENV: production
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "arn:aws:logs:us-east-1:*:*"

        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:Query
          Resource: 
            - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/PlayStationGames_v3"

        - Effect: Allow
          Action:
            - execute-api:Invoke
          Resource: 
            - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/*"

functions:
  api:
    handler: server.handler
    events:
      - http:
          path: api/{proxy+}
          method: any
          cors: true

resources:  # <-- Añadir esta sección para definir recursos
  Resources:
    ApiGatewayRestApi:
      Type: "AWS::ApiGateway::RestApi"
      Properties:
        Name: "get-games-api-v3"
    ApiGatewayDeployment:
      Type: "AWS::ApiGateway::Deployment"
      Properties:
        RestApiId:
          Ref: ApiGatewayRestApi
        StageName: dev
